<?php

/**
 * @file
 * Contains commerce_enchanced_ecommerce.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\commerce_enchanced_ecommerce\Model\EnchancedECommerceCheckout;
use Drupal\commerce_enchanced_ecommerce\Model\EnchancedECommerceProduct;
use Drupal\commerce_enchanced_ecommerce\Model\EnchancedECommerceCartProduct;
use Drupal\commerce_enchanced_ecommerce\Model\EnchancedECommerceOrder;
use Drupal\commerce_enchanced_ecommerce\Model\EnchancedECommerceShipmentProduct;

/**
 * Implements hook_help().
 */
function commerce_enchanced_ecommerce_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the commerce_enchanced_ecommerce module.
    case 'help.page.commerce_enchanced_ecommerce':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Send data to google enchanced ecommerce.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function commerce_enchanced_ecommerce_preprocess_commerce_product(&$variables) {
  $elements = $variables['elements'];
  if ($elements['#view_mode'] == 'full') {
    /** @var \Drupal\commerce_product\Entity $product */
    $product = $elements["#commerce_product"];
    $variant = $product->getDefaultVariation();
    $enchanchedEcommerce = new EnchancedECommerceProduct($product, $variant);
    $details = $enchanchedEcommerce->toExport();
    $variables['#attached']['library'][] = 'commerce_enchanced_ecommerce/product_details';
    $variables['#attached']['drupalSettings']['commerceEnchancedECommerce'] = $details;
  }
}

/**
 * Implements hook_form_alter().
 */
function commerce_enchanced_ecommerce_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  if (strpos($form_id, 'commerce_order_item_add_to_cart_form_commerce_product') !== FALSE) {
    $form['#attached']['library'][] = 'commerce_enchanced_ecommerce/add_to_cart';
    /** @var \Drupal\commerce_order\Entity\OrderItemInterface $orderItem */
    $orderItem = $form_state->getFormObject()->getEntity();
    /** @var \Drupal\commerce_product\Entity\ProductVariationInterface $purchased_entity */
    $purchased_entity = $orderItem->getPurchasedEntity();
    /** @var \Drupal\commerce_product\Entity\ProductInterface $purchased_entity */
    $product = $purchased_entity->getProduct();
    $enchanchedEcommerce = new EnchancedECommerceCartProduct($product, $purchased_entity);
    $details = $enchanchedEcommerce->toExport();
    /** @var \Drupal\commerce_store\Entity\Store $store */
    $store = \Drupal::service('commerce_store.store_context')->getStore();
    $details->currencyCode = $store->getDefaultCurrencyCode();
    $form['#attached']['drupalSettings']['ceeAddToCart'] = $details;
  }
  if (strpos($form_id, '_cart_form') !== FALSE) {
    $form['#attached']['library'][] = 'commerce_enchanced_ecommerce/remove_from_cart';
    $carts = \Drupal::service('commerce_cart.cart_provider')->getCarts();
//    if (!empty($carts)) {
//     $products = [];
//     foreach ($carts as $cart_id => $cart) {
//        if (isset($form[$cart_id])) {
//          $items = &$form[$cart_id]['shipments'][0]['content']['#shipment_items'];
//          foreach ($items as &$item) {
//            $variant = $item['purchased_entity']['#commerce_product_variation'];
//            $product = $variant->getProduct();
//            $enchanchedEcommerce = new EnchancedECommerce($product, $variant);
//            $products[$variant->id()] = $enchanchedEcommerce->getCartActionDetails();
//          }
//        }
//      }
//      $form['#attached']['drupalSettings']['ceeRemoveFromCart'] = $products;
//    }
  }
  if (strpos($form_id, 'commerce_checkout_flow') !== FALSE) {
    /** @var \Drupal\commerce_order\Entity\OrderInterface $order */
    $order = $form_state->getFormObject()->getOrder();
    if ($form['#step_id'] === 'complete') {
      $enchanchedEcommerce = new EnchancedECommerceOrder($order);
      $enchanchedEcommerce->getOrderCompleteData($form);
    }

    $products = [];
    foreach ($order->get('shipments') as $shipmentListItem) {
      /** @var \Drupal\interflora_shipping\Entity\Shipment $shipment */
      $shipment = $shipmentListItem->entity;
      foreach ($shipment->getItems() as $shipmentItem) {
        $shipmentProductInfo = new EnchancedECommerceShipmentProduct($shipmentItem, $shipment);
        $products[] = $shipmentProductInfo->toExport();
      }
    }

    $stepId = $order->get('checkout_step');
    $payload = new EnchancedECommerceCheckout($stepId, $products);

    if ($payload->stepIdToNumber($stepId) !== FALSE) {
      $form['#attached']['drupalSettings']['checkout'] = $payload;
      $form['#attached']['drupalSettings']['stepId'] = $stepId;
      $form['#attached']['library'][] = 'interflora_order/googleECommerce';
    }
  }
}
